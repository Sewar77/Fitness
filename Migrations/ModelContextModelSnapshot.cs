// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyFitnessLife.Models;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace MyFitnessLife.Migrations
{
    [DbContext(typeof(ModelContext))]
    partial class ModelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("FITNESS")
                .UseCollation("USING_NLS_COMP")
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyFitnessLife.Models.Bank", b =>
                {
                    b.Property<decimal>("Bankid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("BANKID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Bankid"));

                    b.Property<decimal?>("Balance")
                        .HasColumnType("NUMBER")
                        .HasColumnName("BALANCE");

                    b.Property<decimal>("Card")
                        .HasColumnType("NUMBER")
                        .HasColumnName("CARD");

                    b.HasKey("Bankid")
                        .HasName("SYS_C008077");

                    b.ToTable("BANK", "FITNESS");
                });

            modelBuilder.Entity("MyFitnessLife.Models.Feedback", b =>
                {
                    b.Property<decimal>("Feedbackid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("FEEDBACKID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Feedbackid"));

                    b.Property<bool?>("Approved")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(1)
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("APPROVED")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Feedbacktext")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(200)")
                        .HasColumnName("FEEDBACKTEXT");

                    b.Property<DateTime?>("Submittedat")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("SUBMITTEDAT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<decimal>("Userid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("USERID");

                    b.HasKey("Feedbackid")
                        .HasName("SYS_C008122");

                    b.HasIndex("Userid");

                    b.ToTable("FEEDBACKS", "FITNESS");
                });

            modelBuilder.Entity("MyFitnessLife.Models.Invoice", b =>
                {
                    b.Property<decimal>("Invoiceid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("INVOICEID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Invoiceid"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("NUMBER(10,2)")
                        .HasColumnName("AMOUNT");

                    b.Property<DateTime?>("Invoicedate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("INVOICEDATE")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Pdfpath")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("PDFPATH");

                    b.Property<decimal>("Subscriptionid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("SUBSCRIPTIONID");

                    b.Property<decimal>("Userid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("USERID");

                    b.HasKey("Invoiceid")
                        .HasName("SYS_C008116");

                    b.HasIndex("Subscriptionid");

                    b.HasIndex("Userid");

                    b.ToTable("INVOICES", "FITNESS");
                });

            modelBuilder.Entity("MyFitnessLife.Models.Membershipplan", b =>
                {
                    b.Property<decimal>("Planid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("PLANID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Planid"));

                    b.Property<DateTime?>("Createdat")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("CREATEDAT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(200)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<decimal>("Durationinmonths")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("DURATIONINMONTHS");

                    b.Property<string>("Planname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("PLANNAME");

                    b.Property<decimal>("Price")
                        .HasColumnType("NUMBER")
                        .HasColumnName("PRICE");

                    b.HasKey("Planid")
                        .HasName("SYS_C008090");

                    b.ToTable("MEMBERSHIPPLANS", "FITNESS");
                });

            modelBuilder.Entity("MyFitnessLife.Models.Role", b =>
                {
                    b.Property<decimal>("Roleid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("ROLEID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Roleid"));

                    b.Property<string>("Rolename")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("ROLENAME");

                    b.HasKey("Roleid")
                        .HasName("SYS_C008073");

                    b.HasIndex(new[] { "Rolename" }, "SYS_C008074")
                        .IsUnique();

                    b.ToTable("ROLES", "FITNESS");
                });

            modelBuilder.Entity("MyFitnessLife.Models.Subscription", b =>
                {
                    b.Property<decimal>("Subscriptionid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("SUBSCRIPTIONID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Subscriptionid"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("AMOUNT");

                    b.Property<DateTime>("Enddate")
                        .HasColumnType("DATE")
                        .HasColumnName("ENDDATE");

                    b.Property<string>("Paymentstatus")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("PAYMENTSTATUS")
                        .HasDefaultValueSql("'Pending' ");

                    b.Property<decimal>("Planid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("PLANID");

                    b.Property<DateTime>("Startdate")
                        .HasColumnType("DATE")
                        .HasColumnName("STARTDATE");

                    b.Property<decimal>("Userid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("USERID");

                    b.HasKey("Subscriptionid")
                        .HasName("SYS_C008097");

                    b.HasIndex("Planid");

                    b.HasIndex("Userid");

                    b.ToTable("SUBSCRIPTIONS", "FITNESS");
                });

            modelBuilder.Entity("MyFitnessLife.Models.Trainerassignment", b =>
                {
                    b.Property<decimal>("Assignmentid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("ASSIGNMENTID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Assignmentid"));

                    b.Property<DateTime?>("Assignedat")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("ASSIGNEDAT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<decimal>("Memberid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("MEMBERID");

                    b.Property<decimal>("Trainerid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("TRAINERID");

                    b.HasKey("Assignmentid")
                        .HasName("SYS_C008109");

                    b.HasIndex("Memberid");

                    b.HasIndex("Trainerid");

                    b.ToTable("TRAINERASSIGNMENTS", "FITNESS");
                });

            modelBuilder.Entity("MyFitnessLife.Models.User", b =>
                {
                    b.Property<decimal>("Userid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("USERID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Userid"));

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("DATE")
                        .HasColumnName("BIRTHDATE");

                    b.Property<DateTime?>("Createdat")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("CREATEDAT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Fname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("FNAME");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("GENDER");

                    b.Property<string>("Imagepath")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(200)")
                        .HasColumnName("IMAGEPATH");

                    b.Property<string>("Lname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("LNAME");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("PASSWORD");

                    b.Property<string>("Phonenumber")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("PHONENUMBER");

                    b.Property<decimal?>("Roleid")
                        .IsRequired()
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("ROLEID");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("STATUS");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("USERNAME");

                    b.HasKey("Userid")
                        .HasName("SYS_C008082");

                    b.HasIndex("Roleid");

                    b.HasIndex(new[] { "Username" }, "SYS_C008083")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "SYS_C008084")
                        .IsUnique()
                        .HasFilter("\"EMAIL\" IS NOT NULL");

                    b.ToTable("USERS", "FITNESS");
                });

            modelBuilder.Entity("MyFitnessLife.Models.Visitor", b =>
                {
                    b.Property<decimal>("Visitorid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("VISITORID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Visitorid"));

                    b.Property<string>("Devicetype")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("DEVICETYPE");

                    b.Property<bool?>("Hasregistered")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(1)
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("HASREGISTERED")
                        .HasDefaultValueSql("0");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("IP_ADDRESS");

                    b.Property<string>("Pagevisited")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("PAGEVISITED");

                    b.Property<string>("Referralsource")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("REFERRALSOURCE");

                    b.Property<string>("Referralurl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("REFERRALURL");

                    b.Property<string>("Sessionid")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("SESSIONID");

                    b.Property<string>("Useragent")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("USERAGENT");

                    b.Property<DateTime?>("Visittime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("VISITTIME")
                        .HasDefaultValueSql("SYSDATE");

                    b.HasKey("Visitorid")
                        .HasName("SYS_C008138");

                    b.ToTable("VISITOR", "FITNESS");
                });

            modelBuilder.Entity("MyFitnessLife.Models.Workout", b =>
                {
                    b.Property<decimal>("Workoutid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("WORKOUTID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Workoutid"));

                    b.Property<DateTime?>("Createdat")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("CREATEDAT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Goals")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(200)")
                        .HasColumnName("GOALS");

                    b.Property<decimal>("Memberid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("MEMBERID");

                    b.Property<decimal>("Trainerid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("TRAINERID");

                    b.HasKey("Workoutid")
                        .HasName("SYS_C008103");

                    b.HasIndex("Memberid");

                    b.HasIndex("Trainerid");

                    b.ToTable("WORKOUTS", "FITNESS");
                });

            modelBuilder.Entity("MyFitnessLife.Models.Feedback", b =>
                {
                    b.HasOne("MyFitnessLife.Models.User", "User")
                        .WithMany("Feedbacks")
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("SYS_C008123");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyFitnessLife.Models.Invoice", b =>
                {
                    b.HasOne("MyFitnessLife.Models.Subscription", "Subscription")
                        .WithMany("Invoices")
                        .HasForeignKey("Subscriptionid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("SYS_C008117");

                    b.HasOne("MyFitnessLife.Models.User", "User")
                        .WithMany("Invoices")
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("SYS_C008118");

                    b.Navigation("Subscription");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyFitnessLife.Models.Subscription", b =>
                {
                    b.HasOne("MyFitnessLife.Models.Membershipplan", "Plan")
                        .WithMany("Subscriptions")
                        .HasForeignKey("Planid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("SYS_C008099");

                    b.HasOne("MyFitnessLife.Models.User", "User")
                        .WithMany("Subscriptions")
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("SYS_C008098");

                    b.Navigation("Plan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyFitnessLife.Models.Trainerassignment", b =>
                {
                    b.HasOne("MyFitnessLife.Models.User", "Member")
                        .WithMany("TrainerassignmentMembers")
                        .HasForeignKey("Memberid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("SYS_C008111");

                    b.HasOne("MyFitnessLife.Models.User", "Trainer")
                        .WithMany("TrainerassignmentTrainers")
                        .HasForeignKey("Trainerid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("SYS_C008110");

                    b.Navigation("Member");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("MyFitnessLife.Models.User", b =>
                {
                    b.HasOne("MyFitnessLife.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("Roleid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("SYS_C008085");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("MyFitnessLife.Models.Workout", b =>
                {
                    b.HasOne("MyFitnessLife.Models.User", "Member")
                        .WithMany("WorkoutMembers")
                        .HasForeignKey("Memberid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("SYS_C008105");

                    b.HasOne("MyFitnessLife.Models.User", "Trainer")
                        .WithMany("WorkoutTrainers")
                        .HasForeignKey("Trainerid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("SYS_C008104");

                    b.Navigation("Member");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("MyFitnessLife.Models.Membershipplan", b =>
                {
                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("MyFitnessLife.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("MyFitnessLife.Models.Subscription", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("MyFitnessLife.Models.User", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("Invoices");

                    b.Navigation("Subscriptions");

                    b.Navigation("TrainerassignmentMembers");

                    b.Navigation("TrainerassignmentTrainers");

                    b.Navigation("WorkoutMembers");

                    b.Navigation("WorkoutTrainers");
                });
#pragma warning restore 612, 618
        }
    }
}
